import 'package:exam1/model/Product.dart';
import 'package:exam1/screen/add_product_screen.dart';
import 'package:exam1/screen/detail_product_screen.dart';
import 'package:exam1/screen/edit_product_screen.dart';
import 'package:exam1/service/product_service.dart';
import 'package:flutter/material.dart';
class HomeScreen extends StatefulWidget {
  @override
  State<StatefulWidget> createState() => _HomeScreenState();
}
class _HomeScreenState extends State<HomeScreen> {
  List<Product> products = [];
  late ProductService service;
  getProducts() async {
    service = ProductService(await getDatabase());
    var data = await service.getAll();
    setState(() {
      products = data;
    });
  }
  @override
  void initState() {
    getProducts();
    super.initState();
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('QUẢN LÝ DANH SÁCH SẢN PHẨM'),
      ),
      body: Container(
        child: ListView.builder(
          itemBuilder: (context, index) {
            return ListTile(
              title: Text(products[index].productName),
              subtitle: Text('Giá:' + products[index].price.toString() +'.000 VND'),
              trailing: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => EditProductForm(products[index].productId)))
                          .then((value) {
                        getProducts();
                      });
                    },
                    child: Icon(Icons.edit),
                  ),
                  SizedBox(
                    width: 5,
                  ),
                  ElevatedButton(
                      onPressed: () {
                        showConfirm(context, products[index].productId);
                      },
                      child: Icon(Icons.delete))
                ],
              ),
              onTap: (){
                Navigator.push(context, MaterialPageRoute(
                    builder: (context)=>DetailProduct(products[index].productId)));
              },
            );
          },
          itemCount: products.length,
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(context,
              MaterialPageRoute(builder: (context) => AddProductForm()))
              .then((value) {
            getProducts();
          });
        },
        child: const Icon(Icons.add),
      ),
    );
  }
  void showConfirm(BuildContext context, String productId) {
    showDialog(
        context: context,
        builder: (context) {
          return AlertDialog(
              title: Text('Xóa sản phẩm?'),
              content: Text('Bạn có muốn xóa sản phẩm này không?'),
              actions: [
                TextButton(
                    onPressed: () {
                      Navigator.pop(context);
                    },
                    child: Text('Không')),
                TextButton(
                    onPressed: () {
                      service.delete(productId);
                      getProducts();
                      Navigator.pop(context);
                    },
                    child: Text('Có')),
              ]);
        });
  }
}
